// ============================================================================
// APP ICON COMPONENT
// ============================================================================

import React from 'react';
import { IconProps } from '@/types';
import {
  Home,
  Users,
  Package,
  ShoppingCart,
  FileText,
  MapPin,
  Settings,
  User,
  LogOut,
  Menu,
  X,
  Search,
  Filter,
  Plus,
  Edit,
  Trash2,
  Eye,
  Download,
  Upload,
  Calendar,
  Clock,
  DollarSign,
  TrendingUp,
  TrendingDown,
  AlertTriangle,
  CheckCircle,
  XCircle,
  Info,
  ChevronDown,
  ChevronUp,
  ChevronLeft,
  ChevronRight,
  ArrowLeft,
  ArrowRight,
  Sun,
  Moon,
  Bell,
  Mail,
  Phone,
  Map,
  Building,
  Truck,
  CreditCard,
  BarChart3,
  PieChart,
  Activity,
  Target,
  Star,
  Heart,
  ThumbsUp,
  ThumbsDown,
  Bookmark,
  Tag,
  Tags,
  Flag,
  Shield,
  Lock,
  Unlock,
  Key,
  Database,
  Server,
  Globe,
  Wifi,
  WifiOff,
  Battery,
  Volume2,
  VolumeX,
  Play,
  Pause,
  Square,
  SkipBack,
  SkipForward,
  RotateCcw,
  RotateCw,
  RefreshCw,
  RefreshCcw,
  Save,
  Copy,
  Scissors,
  Clipboard,
  Printer,
  Monitor,
  Smartphone,
  Tablet,
  Laptop,
  Headphones,
  Camera,
  Image,
  Video,
  Music,
  Folder,
  FolderOpen,
  Archive,
  Zap,
  Flame,
  Droplets,
  Wind,
  Cloud,
  CloudRain,
  CloudSnow,
  CloudLightning,
  Sunrise,
  Sunset,
  Thermometer,
  Gauge,
  Timer,
} from 'lucide-react';

const iconMap: Record<string, React.ComponentType<any>> = {
  // Navigation
  home: Home,
  users: Users,
  package: Package,
  'shopping-cart': ShoppingCart,
  'file-text': FileText,
  'map-pin': MapPin,
  settings: Settings,
  user: User,
  'log-out': LogOut,
  menu: Menu,
  x: X,
  search: Search,
  filter: Filter,
  plus: Plus,
  edit: Edit,
  trash: Trash2,
  eye: Eye,
  download: Download,
  upload: Upload,
  calendar: Calendar,
  clock: Clock,
  'dollar-sign': DollarSign,
  'trending-up': TrendingUp,
  'trending-down': TrendingDown,
  'alert-triangle': AlertTriangle,
  'check-circle': CheckCircle,
  'x-circle': XCircle,
  info: Info,
  'chevron-down': ChevronDown,
  'chevron-up': ChevronUp,
  'chevron-left': ChevronLeft,
  'chevron-right': ChevronRight,
  'arrow-left': ArrowLeft,
  'arrow-right': ArrowRight,
  sun: Sun,
  moon: Moon,
  bell: Bell,
  mail: Mail,
  phone: Phone,
  map: Map,
  building: Building,
  truck: Truck,
  'credit-card': CreditCard,
  file: FileText,
  'bar-chart': BarChart3,
  'pie-chart': PieChart,
  activity: Activity,
  target: Target,
  star: Star,
  heart: Heart,
  'thumbs-up': ThumbsUp,
  'thumbs-down': ThumbsDown,
  bookmark: Bookmark,
  tag: Tag,
  tags: Tags,
  flag: Flag,
  shield: Shield,
  lock: Lock,
  unlock: Unlock,
  key: Key,
  database: Database,
  server: Server,
  globe: Globe,
  wifi: Wifi,
  'wifi-off': WifiOff,
  battery: Battery,
  volume: Volume2,
  'volume-off': VolumeX,
  play: Play,
  pause: Pause,
  square: Square,
  'skip-back': SkipBack,
  'skip-forward': SkipForward,
  'rotate-ccw': RotateCcw,
  'rotate-cw': RotateCw,
  'refresh-cw': RefreshCw,
  'refresh-ccw': RefreshCcw,
  save: Save,
  copy: Copy,
  scissors: Scissors,
  clipboard: Clipboard,
  printer: Printer,
  monitor: Monitor,
  smartphone: Smartphone,
  tablet: Tablet,
  laptop: Laptop,
  headphones: Headphones,
  camera: Camera,
  image: Image,
  video: Video,
  music: Music,
  folder: Folder,
  'folder-open': FolderOpen,
  archive: Archive,
  zap: Zap,
  flame: Flame,
  droplets: Droplets,
  wind: Wind,
  cloud: Cloud,
  'cloud-rain': CloudRain,
  'cloud-snow': CloudSnow,
  'cloud-lightning': CloudLightning,
  sunrise: Sunrise,
  sunset: Sunset,
  thermometer: Thermometer,
  gauge: Gauge,
  timer: Timer,
};

export interface AppIconProps extends IconProps {
  name: string;
  className?: string;
}

const AppIcon: React.FC<AppIconProps> = ({ 
  name, 
  className = '', 
  size = 24, 
  color = 'currentColor',
  ...props 
}) => {
  const IconComponent = iconMap[name];
  
  if (!IconComponent) {
    console.warn(`Icon "${name}" not found in iconMap`);
    return <div className={`w-${size} h-${size} ${className}`} />;
  }

  return (
    <IconComponent
      size={size}
      color={color}
      className={className}
      {...props}
    />
  );
};

export default AppIcon;